{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,kBAChCE,EAAYJ,EAAKE,cAAc,iBAC/BG,EAAcL,EAAKE,cAAc,mBAEvC,SAASI,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACAF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CA8BjBR,EAAKgB,iBAAiB,UAZtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIV,EAAQW,SAAShB,EAAWiB,OAC5BC,EAAOF,SAASf,EAAUgB,OAC1BE,EAASH,SAASd,EAAYe,OAC9BZ,EAAS,GAAKa,EAAO,GAAMC,GAAU,EACvCxB,EAAAyB,OAAOC,QAAQ,kCApBnB,SAAwBC,EAAOJ,EAAMC,GACnC,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAQI,IAG1BpB,EAFiBoB,EAAI,EACAD,EAAQJ,EAAOK,GAEjCC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBV,EAAAyB,OAAOK,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBV,EAAAyB,OAAOO,QAAQ,sBAAoBvB,QAAeC,MAAU,G,CAclEuB,CAAevB,EAAOa,EAAMC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('[name=\"delay\"]');\nconst stepInput = form.querySelector('[name=\"step\"]');\nconst amountInput = form.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve({ position, delay });// Fulfill\n            } else {\n                reject({ position, delay });// Reject\n            }\n        }, delay);\n    });\n};\n\nfunction createPromises(delay, step, amount) {\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promiseDelay = delay + step * i;\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let delay = parseInt(delayInput.value);\n  let step = parseInt(stepInput.value);\n  let amount = parseInt(amountInput.value);\n  if ((delay < 0 || step < 0) || amount <= 0) {\n    Notify.warning('Please enter a positive value!');\n    return;\n  }\n  createPromises(delay, step, amount);\n}\n\nform.addEventListener('submit', handleSubmit);"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","parseInt","value","step","amount","Notify","warning","delay1","i","then","success","catch","failure","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.e9e036cb.js.map"}